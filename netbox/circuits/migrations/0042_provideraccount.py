# Generated by Django 4.1.4 on 2023-03-14 16:02

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json


#
# Migrate Account in Provider model to separate account model
#
def create_provideraccounts_from_providers(apps, schema_editor):
    Provider = apps.get_model('circuits', 'Provider')
    ProviderAccount = apps.get_model('circuits', 'ProviderAccount')

    for provider in Provider.objects.all():
        if provider.account is not None:
            provideraccount = ProviderAccount.objects.create(
                name=f'{provider.name} {provider.account}',
                account=provider.account,
                provider=provider,
            )


#
# Unmigrate ProviderAccount to Provider model
#
def revert_provideraccounts_from_providers(apps, schema_editor):
    ProviderAccount = apps.get_model('circuits', 'ProviderAccount')
    provideraccounts = ProviderAccount.objects.all().order_by('pk')
    for provideraccount in provideraccounts:
        if provideraccounts.filter(provider=provideraccount.provider)[0] == provideraccount:
            provideraccount.provider.account = provideraccount.account
            provideraccount.provider.save()


def migrate_circuits_to_provideraccount(apps, schema_editor):
    Circuit = apps.get_model('circuits', 'Circuit')
    circuits = Circuit.objects.all()
    for circuit in circuits:
        circuit.provider_account = circuit.provider.accounts.order_by('pk').first()
        circuit.save()


def migrate_circuits_from_provideraccount(apps, schema_editor):
    Circuit = apps.get_model('circuits', 'Circuit')
    circuits = Circuit.objects.all().order_by('pk')
    for circuit in circuits:
        circuit.provider = circuit.provider_account.provider
        circuit.save()


class Migration(migrations.Migration):

    dependencies = [
        ('extras', '0084_staging'),
        ('circuits', '0041_standardize_description_comments'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProviderAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('comments', models.TextField(blank=True)),
                ('account', models.CharField(max_length=30)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='accounts', to='circuits.provider')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('provider', 'account'),
            },
        ),
        migrations.AddConstraint(
            model_name='provideraccount',
            constraint=models.UniqueConstraint(condition=models.Q(('account', ''), _negated=True), fields=('provider', 'name'), name='circuits_provideraccount_unique_provider_name'),
        ),
        migrations.AddConstraint(
            model_name='provideraccount',
            constraint=models.UniqueConstraint(fields=('provider', 'account'), name='circuits_provideraccount_unique_provider_account'),
        ),
        migrations.RunPython(
            create_provideraccounts_from_providers, revert_provideraccounts_from_providers
        ),
        migrations.RemoveField(
            model_name='provider',
            name='account',
        ),
        migrations.AddField(
            model_name='circuit',
            name='provider_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='circuits', to='circuits.provideraccount', null=True, blank=True),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='circuit',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, related_name='circuits', to='circuits.provider', null=True, blank=True),
        ),
        migrations.RunPython(
            migrate_circuits_to_provideraccount, migrate_circuits_from_provideraccount
        ),
        migrations.AlterField(
            model_name='circuit',
            name='provider_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='circuits', to='circuits.provideraccount'),
        ),
        migrations.RemoveConstraint(
            model_name='circuit',
            name='circuits_circuit_unique_provider_cid',
        ),
        migrations.AlterModelOptions(
            name='circuit',
            options={'ordering': ['provider_account', 'cid']},
        ),
        migrations.AddConstraint(
            model_name='circuit',
            constraint=models.UniqueConstraint(fields=('provider_account', 'cid'), name='circuits_circuit_unique_provider_cid'),
        ),
        migrations.RemoveField(
            model_name='circuit',
            name='provider',
        ),
    ]
