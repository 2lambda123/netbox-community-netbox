# Generated by Django 4.2.9 on 2024-01-18 18:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_initial'),
        ('extras', '0001_initial'),
        ('virtualization', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dcim', '0003_initial'),
        ('tenancy', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='configcontext',
            name='cluster_groups',
            field=models.ManyToManyField(blank=True, related_name='+', to='virtualization.clustergroup'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='cluster_types',
            field=models.ManyToManyField(blank=True, related_name='+', to='virtualization.clustertype'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='clusters',
            field=models.ManyToManyField(blank=True, related_name='+', to='virtualization.cluster'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='data_file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.datafile'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='data_source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='core.datasource'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='device_types',
            field=models.ManyToManyField(blank=True, related_name='+', to='dcim.devicetype'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='locations',
            field=models.ManyToManyField(blank=True, related_name='+', to='dcim.location'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='platforms',
            field=models.ManyToManyField(blank=True, related_name='+', to='dcim.platform'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='regions',
            field=models.ManyToManyField(blank=True, related_name='+', to='dcim.region'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='+', to='dcim.devicerole'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='site_groups',
            field=models.ManyToManyField(blank=True, related_name='+', to='dcim.sitegroup'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='sites',
            field=models.ManyToManyField(blank=True, related_name='+', to='dcim.site'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='+', to='extras.tag'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='tenant_groups',
            field=models.ManyToManyField(blank=True, related_name='+', to='tenancy.tenantgroup'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='tenants',
            field=models.ManyToManyField(blank=True, related_name='+', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='cachedvalue',
            name='object_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='branch',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='object_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='webhook',
            constraint=models.UniqueConstraint(fields=('payload_url', 'type_create', 'type_update', 'type_delete'), name='extras_webhook_unique_payload_url_types'),
        ),
        migrations.AddIndex(
            model_name='taggeditem',
            index=models.Index(fields=['content_type', 'object_id'], name='extras_tagg_content_717743_idx'),
        ),
        migrations.AddConstraint(
            model_name='bookmark',
            constraint=models.UniqueConstraint(fields=('object_type', 'object_id', 'user'), name='extras_bookmark_unique_per_object_and_user'),
        ),
    ]
