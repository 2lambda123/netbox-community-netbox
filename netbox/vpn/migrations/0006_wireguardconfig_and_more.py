# Generated by Django 5.0.7 on 2024-10-15 11:15

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import ipam.fields
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('extras', '0121_customfield_related_object_filter'),
        ('vpn', '0005_rename_indexes'),
    ]

    operations = [
        migrations.CreateModel(
            name='WireguardConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('tunnel_interface_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('private_key', models.TextField(blank=True)),
                ('public_key', models.TextField(blank=True)),
                ('listen_port', models.PositiveIntegerField(default=51820, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)])),
                ('allowed_ips', django.contrib.postgres.fields.ArrayField(base_field=ipam.fields.IPNetworkField(), blank=True, null=True, size=None)),
                ('fwmark', models.PositiveIntegerField(blank=True, null=True)),
                ('persistent_keepalive_interval', models.PositiveIntegerField(default=0)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tunnel_interface_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'wireguard config',
                'verbose_name_plural': 'wireguard configs',
                'ordering': ('pk',),
                'indexes': [models.Index(fields=['tunnel_interface_type', 'tunnel_interface_id'], name='vpn_wiregua_tunnel__5cdbbe_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='wireguardconfig',
            constraint=models.UniqueConstraint(fields=('tunnel_interface_type', 'tunnel_interface_id'), name='vpn_wireguardconfig_tunnel_interface', violation_error_message='An tunnel_interface may only have one wireguard configration.'),
        ),
    ]
